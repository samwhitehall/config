call plug#begin('~/.vim/plugged')

" vim-plug plugins
Plug 'itchyny/lightline.vim'

Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'

Plug 'Yggdroot/indentLine'

Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'jistr/vim-nerdtree-tabs'

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --no-bash' }
Plug 'junegunn/fzf.vim'

Plug 'tpope/vim-eunuch'

Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'iberianpig/tig-explorer.vim'
Plug 'rbgrouleff/bclose.vim'   " dependency of tig-explorer

Plug 'neomake/neomake'

Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }

Plug 'pedrohdz/vim-yaml-folds'
Plug 'hashivim/vim-terraform'


call plug#end()

" syntax handling
syntax on
syntax enable
filetype plugin indent on

" colour
highlight LineNr ctermfg=DarkGray
highlight ColorColumn ctermbg=DarkGray

" line numbers
set number
set numberwidth=3

" wildmenu (nicer tab completion in :)
set ignorecase
set wildmenu
set wildmode=longest:full,full

" re-map leader
let mapleader = ","

" terminal
set visualbell
set ttyfast
set title

" os clipboard access
nmap <leader>y "+y
vmap <leader>y "+y
nmap <leader>p "+p

" buffer searching
set hlsearch
nnoremap <leader><space> :noh<cr>
set smartcase

" wrapping
set wrap
set textwidth=79
set colorcolumn=80
set formatoptions=qrn1

" re-map arrow keys
nmap <left> <<
nmap <right> >>
vmap <left> <gv
vmap <right> >gv

nmap <up> [e
nmap <down> ]e
vmap <up> [egv
vmap <down> ]egv

inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" tabbing
set expandtab
set tabstop=4
set shiftwidth=4

" window splitting
nnoremap <leader>hs <C-w>v<C-w>l
nnoremap <leader>vs <C-w>s<C-w>l

set splitbelow
set splitright

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" strip trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" nerdtree
let NERDTreeShowHidden = 1
nnoremap <leader>t :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>

" gitgutter
autocmd BufWritePost * GitGutter  " update on save
highlight clear SignColumn

" lightline
let g:lightline = {
    \ 'colorscheme': 'wombat',
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
    \ },
    \ 'component_function': {
    \   'gitbranch': 'FugitiveHead'
    \ },
    \ }

" indentline
let g:indentLine_char = 'â¦™'

" fzf
nnoremap <silent> <leader>. :Files<CR>
nnoremap <silent> <leader><leader> :Ag<CR>

let $FZF_DEFAULT_OPTS = '--bind ctrl-a:select-all,ctrl-d:deselect-all'

let g:fzf_buffers_jump = 1

" tig-explorer
nnoremap <Leader>G :TigOpenCurrentFile<CR>
nnoremap <Leader>g :TigOpenProjectRootDir<CR>

" neomake
call neomake#configure#automake('nrwi', 500)

let g:neomake_python_enabled_makers = ['flake8']

let g:neomake_python_flake8_exe = 'env'
let g:neomake_python_flake8_args = ['flake8']

" markdown preview
nmap <C-p> <Plug>MarkdownPreviewToggle

" snippets
inoremap <C-b> import pdb; pdb.set_trace()

" language-specific tweaks
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
